<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net5.0</TargetFramework>
		<TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
		<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
		<IsPackable>false</IsPackable>
		<SpaRoot>ClientApp\</SpaRoot>
		<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
		<UserSecretsId>a536296f-5db3-4223-8b2a-ce659817d057</UserSecretsId>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.3" />
		<PackageReference Include="oh7.MyNewsFeedReader.Library" Version="1.0.0" />
		<PackageReference Include="oh7.MyNewsFeedReader.Models" Version="1.0.0" />
	</ItemGroup>

	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<None Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<ItemGroup>
		<None Update="ClientApp\build\favicon.ico">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\build\index.html">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\front-end-scripts.cmd">
			<CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\package-lock.json">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\package.json">
			<CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\public\favicon.ico">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\public\img\bbc.png">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\public\img\cnbc.png">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\public\img\cnn_politics.png">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\public\img\cnn_us.png">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\public\img\dagbladet.png">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\public\img\e24.png">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\public\img\euronews.png">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\public\img\fox.png">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\public\img\guardian_uk.png">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\public\img\itavisen.png">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\public\img\logos.xcf">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\public\img\nrk.png">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\public\img\politico.png">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\public\img\px.png">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\public\img\reuters.png">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\public\img\skynews_uk.png">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\public\img\unknown.png">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\public\img\vg.png">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\public\index.html">
			<CopyToOutputDirectory>Always</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\public\manifest.json">
			<CopyToOutputDirectory>Never</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\src\App.js">
		  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\src\components\ArticleWithImageLeft.js">
		  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\src\components\ArticleWithImageRight.js">
		  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\src\components\ArticleWithoutImage.js">
		  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\src\components\Home.js">
		  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\src\components\Layout.js">
		  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\src\components\NavMenu.css">
		  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\src\components\NavMenu.js">
		  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\src\components\NewsOutlet.js">
		  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\src\components\NewsOutletMenu.js">
		  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\src\custom.css">
		  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\src\index.js">
		  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
		<None Update="ClientApp\src\registerServiceWorker.js">
		  <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
		</None>
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)build\**" />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>

	<Target Name="PostPublish" AfterTargets="AfterPublish">
		<Exec Command="echo Install front-end&#xD;&#xA;&#xD;&#xA;cd $(PublishDir)&#xD;&#xA;npm install" />
	</Target>
</Project>
